# don't send nginx version in headers or error pages
server_tokens off;

# https://gist.github.com/simonw/1e0fdf2e9b8744b39bd7
# https://nginx.org/en/docs/http/ngx_http_log_module.html#log_format
log_format logfmt 'time_local="$time_local" '
    'remote_addr="$remote_addr" '
    'request="$request" '
    'status=$status '
    'body_bytes_sent=$body_bytes_sent '
    'request_time=$request_time '
    'upstream_response_time=$upstream_response_time '
    'request_id=$request_id '
    'forwarded_for="$http_x_forwarded_for" '
    'forwarded_proto="$http_x_forwarded_proto" '
    'http_referer="$http_referer" '
    'http_user_agent="$http_user_agent"';

# https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip
gzip on;
gzip_comp_level 5;

# https://github.com/h5bp/server-configs-nginx/blob/master/nginx.conf#L103
# Don't compress anything that's already small and unlikely to shrink much
# if at all (the default is 20 bytes, which is bad as that usually leads to
# larger files after gzipping).
# Default: 20
gzip_min_length 256;

# we don't compress media that already has compression built into the format
gzip_types
    text/css
    text/xml
    text/plain
    image/svg+xml
    image/tiff
    application/javascript
    application/atom+xml
    application/rss+xml
    application/font-woff
    application/json
    application/xhtml+xml;

# https://stackoverflow.com/a/33448739/3555105
# http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_proxied
gzip_proxied any;
gzip_vary on;



server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    access_log /var/log/nginx/access.log logfmt;
    error_log /var/log/nginx/error.log;

    include headers.d/general_headers.conf;

    root /var/app/build;


    location / {
        include headers.d/general_headers.conf;
        # Ensure the browser doesn't cache the index.html.
        # Without cache-control headers, browsers use
        # heuristic caching.
        add_header Cache-Control "no-store";

        # First attempt to serve request as file, then serve our index.html
        try_files $uri /index.html;
    }

    location /static/ {
        # Set maximum expiration time. By default, it's off.
        expires max;
        try_files $uri =404;
    }
}
